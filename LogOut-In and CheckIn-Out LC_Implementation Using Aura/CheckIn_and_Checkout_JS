({
    
    doInit : function(component, event, helper) {
        
        var action = component.get("c.getVisitPlan");
        action.setParams({
            recordId : component.get("v.recordId") 
        });
        action.setCallback(this, function(response){
            var state = response.getState();
            var res = response.getReturnValue();
            if (state === "SUCCESS") {
                component.set("v.checkInAddress", res.Check_In_Address__c);
                component.set("v.checkOutAddress", res.Check_Out_Address__c);
                component.set("v.logouttime",res.Log_Out_Date_Time__c);
                component.set("v.logointime",res.Log_In_Date_Time__c);
                component.set("v.TotalDistance",res.Total_KiloMeters__c);
                component.set("v.Distance", res.Distance_Text_and_Value__c);
                
                if(res.Log_In__c == false && res.Log_Out__c == false && res.Check_In__c == false && res.Check_Out__c == false){
                    component.set('v.isButtonLogIn',false);
                    component.set('v.isButtonLogOut',true);
                    component.set('v.isButtonCheckIn',true);
                    component.set('v.isButtonCheckOut',true);
                }else{
                    if(res.Log_In__c == true){
                        component.set('v.isButtonLogIn',true);
                    }else{
                        component.set('v.isButtonLogIn',false);
                    }
                    
                    
                    if(res.Log_Out__c == true){
                        component.set('v.isButtonLogOut',true);
                    }else{
                        component.set('v.isButtonLogOut',false);
                    }
                    
                    if(res.Check_In__c == true){
                        component.set('v.isButtonCheckIn',true);
                    }else{
                        component.set('v.isButtonCheckIn',false);
                    }
                    
                    if(res.Check_Out__c == true){
                        component.set('v.isButtonCheckOut',true);
                    }else{
                        component.set('v.isButtonCheckOut',false);
                    }
                }
            }
        });
        $A.enqueueAction(action);
    },
    CheckIn : function(component, event, helper) {
        $A.get('e.force:refreshView').fire();
        helper.showSpinner(component);
        $A.get('e.force:refreshView').fire();
        if (navigator.geolocation) {
                    
            navigator.geolocation.getCurrentPosition(function(position) {
                helper.hideSpinner(component);
            
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;
                
                var action = component.get("c.CheckInLocationAddress");
                action.setParams({
                    recId : component.get("v.recordId"),
                    latitude : lat,
                    longitude : lon
                });
                action.setCallback(this, function(response){
                    var state = response.getState();
                        
                    if (state === "SUCCESS") {
                        $A.get('e.force:refreshView').fire();
                        component.set('v.isButtonCheckIn',true);
                        component.set('v.isButtonCheckOut',false);
                        component.set("v.Address", response.getReturnValue());
                        
                        component.set("v.checkInAddress", response.getReturnValue());
                        var toastEvent = $A.get("e.force:showToast");
                        toastEvent.setParams({
                            title : 'Success',
                            message: 'CheckIn Successfully',
                            duration:' 1000',
                            key: 'info_alt',
                            type: 'success',
                            mode: 'pester'
                        });
                        toastEvent.fire();
                                
                    }
                });
                $A.enqueueAction(action);
            });
        }else {
            //alert('Your browser does not support GeoLocation');
            console.log('Your browser does not support GeoLocation');
        }
       
    },
    CheckOut : function(component, event, helper) {
        $A.get('e.force:refreshView').fire();
        helper.showSpinner(component);
        $A.get('e.force:refreshView').fire();
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                helper.hideSpinner(component);
            
                var lat = position.coords.latitude;
                var lon = position.coords.longitude;
                var action = component.get("c.CheckOutLocationAddress");
                action.setParams({
                    recId : component.get("v.recordId"),
                    latitude : lat,
                    longitude : lon,
                    
                });
                
                action.setCallback(this, function(response){
                    var state = response.getState();
                    if (state === "SUCCESS") {
                        var res = response.getReturnValue();
                        
                        
                        component.set('v.isButtonCheckIn',false);
                        component.set('v.isButtonCheckOut',true);
                        component.set("v.checkOutAddress", res.Check_Out_Address__c);
                        component.set("v.Distance",res.Distance_Text_and_Value__c);
                        component.set("v.Duration",res.Duration_Text_and_Value__c);
                        component.set("v.TotalDistance",res.Total_KiloMeters__c);
                        component.set("v.Distance", res.Distance_Text_and_Value__c);
                        var toastEvent = $A.get("e.force:showToast");
                        toastEvent.setParams({
                            title : 'Success',
                            message: 'CheckOut Successfully',
                            duration:' 1000',
                            key: 'info_alt',
                            type: 'success',
                            mode: 'pester'
                        });
                        
                        toastEvent.fire();
                    }
                });
                $A.enqueueAction(action);
            });
        }else {
            //alert('Your browser does not support GeoLocation');
            console.log('Your browser does not support GeoLocation');
        }
    },
    LogIn : function(component, event, helper) {
        component.set('v.isButtonLogIn',true);
        component.set('v.isButtonCheckIn',false);
        component.set('v.isButtonCheckOut',true);
        component.set('v.isButtonLogOut',false);
        var action = component.get("c.updatelogintime");
        action.setParams({
            recordId : component.get("v.recordId"),
        });
        action.setCallback(this, function(response){
            var state = response.getState();
            if (state === "SUCCESS") {
                var res = response.getReturnValue()
                component.set("v.logointime",res.Log_In_Date_Time__c);
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    title : 'Success',
                    message: 'LogIn Successfully',
                    duration:' 1000',
                    key: 'info_alt',
                    type: 'success',
                    mode: 'pester'
                });
                toastEvent.fire();
            }
        });
        $A.enqueueAction(action);
    },
    LogOut : function(component, event, helper) {
        component.set('v.isButtonLogIn',false);
        component.set('v.isButtonCheckIn',true);
        component.set('v.isButtonCheckOut',true);
        component.set('v.isButtonLogOut',true);
        var action = component.get("c.updatelogouttime");
        action.setParams({
            recordId : component.get("v.recordId"),
        });
        action.setCallback(this, function(response){
            var state = response.getState();
            if (state === "SUCCESS") {
                var res = response.getReturnValue()
                component.set("v.logouttime",res.Log_Out_Date_Time__c);
                
                var toastEvent = $A.get("e.force:showToast");
                toastEvent.setParams({
                    title : 'Success',
                    message: 'LogOut Successfully',
                    duration:' 1000',
                    key: 'info_alt',
                    type: 'success',
                    mode: 'pester'
                });
                toastEvent.fire();
            }
        });
        $A.enqueueAction(action);
    },
})